// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoBancoDados.Models;

#nullable disable

namespace ProjetoBancoDados.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoBancoDados.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClienteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("ClienteCpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ClienteCpf");

                    b.Property<string>("ClienteEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ClienteEmail");

                    b.Property<DateTime>("ClienteNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("ClienteNascimento");

                    b.Property<string>("ClienteNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ClienteNome");

                    b.Property<string>("ClientePassaporte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ClientePassaporte");

                    b.Property<string>("ClienteTelefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ClienteTelefone");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.Destino", b =>
                {
                    b.Property<int>("DestinoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DestinoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DestinoId"));

                    b.Property<string>("DestinoNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DestinoNome");

                    b.HasKey("DestinoId");

                    b.ToTable("Destino");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.Hospedagem", b =>
                {
                    b.Property<int>("HospedagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HospedagemId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HospedagemId"));

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<string>("HospedagemLocal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HospedagemLocal");

                    b.Property<string>("HospedagemNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HospedagemNome");

                    b.Property<int>("TipoHospedagemId")
                        .HasColumnType("int");

                    b.HasKey("HospedagemId");

                    b.HasIndex("DestinoId");

                    b.HasIndex("TipoHospedagemId");

                    b.ToTable("Hospedagem");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.Pacotes", b =>
                {
                    b.Property<int>("PacotesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PacotesId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PacotesId"));

                    b.Property<string>("PacotesNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PacotesNome");

                    b.HasKey("PacotesId");

                    b.ToTable("Pacotes");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.Pagamento", b =>
                {
                    b.Property<int>("PagamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PagamentoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagamentoId"));

                    b.Property<string>("PagamentoNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PagamentoNome");

                    b.HasKey("PagamentoId");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.TipoHospedagem", b =>
                {
                    b.Property<int>("TipoHospedagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipoHospedagemId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoHospedagemId"));

                    b.Property<string>("TipoHospedagemNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipoHospedagemNome");

                    b.HasKey("TipoHospedagemId");

                    b.ToTable("TipoHospedagem");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.Transporte", b =>
                {
                    b.Property<int>("TransporteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransporteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransporteId"));

                    b.Property<DateTime>("TransporteAno")
                        .HasColumnType("datetime2")
                        .HasColumnName("TransporteAno");

                    b.Property<string>("TransporteNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TransporteNome");

                    b.Property<string>("TransportePlaca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TransportePlaca");

                    b.HasKey("TransporteId");

                    b.ToTable("Transporte");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.Viagem", b =>
                {
                    b.Property<int>("ViagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ViagemId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ViagemId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("HospedagemId")
                        .HasColumnType("int");

                    b.Property<int>("PacotesId")
                        .HasColumnType("int");

                    b.Property<int>("PagamentoId")
                        .HasColumnType("int");

                    b.Property<int>("TransporteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ViagemData")
                        .HasColumnType("datetime2")
                        .HasColumnName("ViagemData");

                    b.Property<decimal>("ViagemValor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ViagemValor");

                    b.HasKey("ViagemId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("HospedagemId");

                    b.HasIndex("PacotesId");

                    b.HasIndex("PagamentoId");

                    b.HasIndex("TransporteId");

                    b.ToTable("Viagem");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.Hospedagem", b =>
                {
                    b.HasOne("ProjetoBancoDados.Models.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoBancoDados.Models.TipoHospedagem", "TipoHospedagem")
                        .WithMany()
                        .HasForeignKey("TipoHospedagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");

                    b.Navigation("TipoHospedagem");
                });

            modelBuilder.Entity("ProjetoBancoDados.Models.Viagem", b =>
                {
                    b.HasOne("ProjetoBancoDados.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoBancoDados.Models.Hospedagem", "Hospedagem")
                        .WithMany()
                        .HasForeignKey("HospedagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoBancoDados.Models.Pacotes", "Pacotes")
                        .WithMany()
                        .HasForeignKey("PacotesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoBancoDados.Models.Pagamento", "Pagamento")
                        .WithMany()
                        .HasForeignKey("PagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoBancoDados.Models.Transporte", "Transporte")
                        .WithMany()
                        .HasForeignKey("TransporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Hospedagem");

                    b.Navigation("Pacotes");

                    b.Navigation("Pagamento");

                    b.Navigation("Transporte");
                });
#pragma warning restore 612, 618
        }
    }
}
